{"version":3,"file":"static/js/558.cc0a1a40.chunk.js","mappings":"6OAaaA,EAAO,SAACC,GACjB,OAAO,IAAIC,QAAJ,yCAAY,WAAMC,GAAN,uFACXC,EAAQH,EAAIG,MAEZC,EAAgB,CAChBC,WAAY,MACZC,QAAO,EACPC,QAAQ,IACRC,QAAQ,GACRC,IAAI,KAERT,EAAMU,OAAOC,OAAO,GAAIP,EAAeJ,IAE/BQ,SAC+B,qCAA/BR,EAAIQ,QAAQ,kBACZL,EAAQS,IAAAA,UAAaZ,EAAIG,QAdlB,kBAoBKU,IAAM,CAClBC,OAASd,EAAIK,WACbE,QAAUP,EAAIO,QAAUP,EAAIO,QAAU,IACtCE,IAAKT,EAAIS,IACTM,KAAKZ,EACLK,QAAQR,EAAIQ,UAzBL,OAoBPQ,EApBO,OA4BXd,GAAQ,kBAAIc,EAAID,MAASC,EAAIR,UAAYQ,GA5B9B,kDA8BXd,EAAQ,EAAD,IA9BI,0DAAZ,wDCXEe,EAAY,kBDgDFR,EChDkB,+CDgDNS,EChDsD,GDiD9EnB,GAAK,QACRU,IAAKA,EACLJ,WAAY,MACZF,OAAM,UAAKe,IACRC,IALQ,IAAIV,EAAYS,EAAYC,G,SE/ChC,SAASC,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAO,yCAAG,yGACIP,IADJ,OAEM,IADdD,EADQ,QAEJS,QAAeT,EAAID,MACvBQ,EAAQP,EAAID,KAAKW,MAHT,2CAAH,qDAYb,OANAC,EAAAA,EAAAA,YAAU,WACDL,GACDE,MAEL,CAACF,KAGA,gBAAKM,UAAU,WAAf,UACI,eAAGA,UAAU,OAAb,cAAsBN,S","sources":["static/js/axios.ts","api/one-word.ts","pages/one-word/index.tsx"],"sourcesContent":["import qs from 'qs';\r\nimport axios from \"axios\"\r\nimport { IResponse } from './globle-interface';\r\n\r\ninterface options {\r\n    methodType:'get' | 'post',\r\n    timeout?:number,\r\n    url:string\r\n    param?:any\r\n    headers?:any,\r\n}\r\n\r\n\r\nexport const Ajax = (opt:options) => {\r\n    return new Promise(async(resolve: (value:any) => void) => {\r\n        let param = opt.param;\r\n    \r\n        let defaultOption = {\r\n            methodType: 'get',\r\n            upload:false,\r\n            timeout:6000,\r\n            headers:{},\r\n            url:'',\r\n        };\r\n        opt = Object.assign({}, defaultOption, opt);\r\n\r\n        if (opt.headers){\r\n            if (opt.headers['Content-Type'] == 'application/x-www-form-urlencoded'){\r\n                param = qs.stringify(opt.param);\r\n            }\r\n        }\r\n\r\n\r\n        try{\r\n            let res = await axios({\r\n                method : opt.methodType,\r\n                timeout : opt.timeout ? opt.timeout : 10000,\r\n                url: opt.url,\r\n                data:param,\r\n                headers:opt.headers\r\n            });\r\n            \r\n            resolve({...res.data, ...res.headers} || res)\r\n        }catch(err){\r\n            resolve(err)\r\n        }\r\n        \r\n\r\n    })\r\n}\r\n\r\nexport const get = <T>(url:string, params:any, opts?:any): Promise<IResponse<T>> => {\r\n    return Ajax({\r\n        url: url,\r\n        methodType: 'get',\r\n        param: {...params},\r\n        ...opts\r\n    });\r\n};\r\n\r\nexport const post = <T>(url:string, params:any, opts?:any): Promise<IResponse<T>> => {\r\n    return Ajax({\r\n        url: url ,\r\n        methodType: 'post',\r\n        param: {...params},\r\n        ...opts\r\n    });\r\n};","import { get } from '@/static/js/axios';\r\nimport { IWord } from '@/api-type/one-word';\r\n\r\nexport const getWordApi =()=> get<IWord>('https://meowgod.com/api/sweet_word/randomOne', {});","import React, { useState, useEffect } from 'react';\r\nimport { getWordApi } from \"@/api/one-word\"\r\nimport './index.scss';\r\n\r\nexport default function Home() {\r\n    const [word, setWord] = useState('');\r\n\r\n    const getWord = async () => {\r\n        let res = await getWordApi();\r\n        if (res.status == 0 && res.data) {\r\n            setWord(res.data.text);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!word) {\r\n            getWord();\r\n        }\r\n    }, [word]);\r\n\r\n    return (\r\n        <div className=\"one-word\">\r\n            <p className='word'> {word}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Ajax","opt","Promise","resolve","param","defaultOption","methodType","upload","timeout","headers","url","Object","assign","qs","axios","method","data","res","getWordApi","params","opts","Home","useState","word","setWord","getWord","status","text","useEffect","className"],"sourceRoot":""}